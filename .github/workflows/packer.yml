name: Packer Build

on:
  pull_request:
    types:
      - closed
jobs:
  build-packer:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository code
      uses: actions/checkout@v4
    - name: Node.js setup
      uses: actions/setup-node@v2
      with:
        node-version: '14.x'
    - uses: ikalnytskyi/action-setup-postgres@v5
      with:
        username: ${{ secrets.PSQL_DB_USER }}
        password: ${{ secrets.PSQL_DB_PASS }}
        database: mydb
        port: 5432
      id: postgres
    - name: Creating .env file
      run: |
          cat << EOF > ./.env
          ${{ secrets.ENV_VARS }}
          ${{ secrets.ENVIRONMENT }}
          EOF  
    - name: Zipping repo
      run: | 
        rm -rf webapp.zip
        zip -r webapp.zip . -x ".git/*" ".github/*" 
    - name: Install dependencies
      run: npm install
    - name: Run tests
      run: npx jest
      env:
        PSQL_DB_USER: ${{ secrets.PSQL_DB_USER }}
        PSQL_DB_PASS: ${{ secrets.PSQL_DB_PASS }}
        PSQL_DB: mydb
        POSTGRES_HOST: localhost
        PORT: 8080
        ENVIRONMENT: TEST
    - name: Cloud Auth
      id: auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: '${{ secrets.SA_KEY}}'
    - name: Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
    - name: gcloud CLI
      run: gcloud info
    - name: Packer Initialization
      id: init
      if: success()
      run: packer init image.pkr.hcl
    - name: Format packer
      id: fmt
      if: success()
      run: packer fmt image.pkr.hcl
    - name: Validate Packer
      if: success()
      #add db/packer vars here
      run: packer validate image.pkr.hcl
    - name: Build Packer
      if: success()
      run: packer build image.pkr.hcl | grep 'project:*' | cut -d ' ' -f 2 > imagename.txt
    - name: Setting Variables for Template
      run:   |
          db_host=$(gcloud secrets versions access latest --secret=secret-host)
          db_pass=$(gcloud secrets versions access latest --secret=secret-pass)
          image_name=$(sudo cat imagename.txt)

    # - name: Fetching Startup Script
    #   run: sudo cat ${{ secrets.STARTUP_SCRIPT }} > startup.sh   
    - name: New VM Template
      run: |
          gcloud compute instance-templates create centos-vm-template-$(date +%Y%m%d%H%M) \
            --region=us-central1 \
            --machine-type=e2-standard-2 \
            --image=$image_name \
            --subnet=webapp \
            --service-account=${{ secrets.VM_SA }} \
            --scopes=https://www.googleapis.com/auth/cloud-platform \
            --metadata=db-user=webapp,db-name=mydb,db-host=$db_host,db-pass=$db_pass,startup-script=${{ secrets.STARTUP_SCRIPT }} \
            --boot-disk-type=pd-standard
    - name: Completion Status
      run: echo "DONE!"    