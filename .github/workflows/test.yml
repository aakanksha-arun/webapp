name: Temp
on:
  pull_request:
    branches: [main]
jobs:
  test-packer:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Cloud Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.SA_KEY}}'
      - name: Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
      - name: gcloud CLI
        run: gcloud info
      - name: Setting Variables for Template
        run: |
          db_host=$(gcloud secrets versions access latest --secret=secret-host)
          db_pass=$(gcloud secrets versions access latest --secret=secret-pass)  
          echo "csye6225-1712767964" > imagename.txt
      - name: Echo Image name
        run: cat imagename.txt  
      - name: Create sh file
        run: echo ${{ secrets.STARTUP_SCRIPT }} > startup.sh
      - name: Check sh
        run: cat startup.sh       
      - name: New VM Template
        run: |
          gcloud compute instance-templates create centos-vm-template-$(date +%Y%m%d%H%M) \
            --instance-template-region=us-central1  \
            --region=us-central1 \
            --machine-type=e2-standard-2 \
            --image=$(cat imagename.txt) \
            --subnet=webapp \
            --service-account=${{ secrets.VM_SA }} \
            --scopes=https://www.googleapis.com/auth/cloud-platform \
            --metadata=db-user=webapp,db-name=mydb,db-host=$db_host,db-pass=$db_pass,startup-script=#!/bin/bash

          sudo mkdir /opt/webapp/
          cd /opt/webapp/

          DB_HOST=$(curl -H "Metadata-Flavor: Google" http://metadata/computeMetadata/v1/instance/attributes/db-host)
          DB_USER=$(curl -H "Metadata-Flavor: Google" http://metadata/computeMetadata/v1/instance/attributes/db-user)
          DB_PASS=$(curl -H "Metadata-Flavor: Google" http://metadata/computeMetadata/v1/instance/attributes/db-pass)
          DB_NAME=$(curl -H "Metadata-Flavor: Google" http://metadata/computeMetadata/v1/instance/attributes/db-name)

          cat <<EOF > ./.env
          PSQL_DB=${DB_NAME}
          PSQL_DB_USER=${DB_USER}
          PSQL_DB_PASS=${DB_PASS}
          PSQL_DB_HOST=${DB_HOST}
          EOF

          cat ./.env

          touch /tmp/startup.sh.done
            \
            --boot-disk-type=pd-standard
      - name: Completion Status
        run: echo "DONE!"    
